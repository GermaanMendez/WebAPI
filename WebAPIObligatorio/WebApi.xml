<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApiCabins</name>
    </assembly>
    <members>
        <member name="M:WebAPIObligatorio.Controllers.AlquilerCabañaController.Post(DTOS.AlquilerCabañaNuevoDTO)">
            <summary>
            Create Rental
            </summary>
            <param name="alquilerCabañaDto"> Rental object to Sign in in json format</param>
            <returns>Returns 200 OK with the user 
            400 BadRequest If the Rentalis null - If the user who is creating the Rental is the owner of the cabin - If The cabin is not available to Rentalin that date range
            500 Server Error</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.AlquilerCabañaController.Delete(System.String,System.Int32)">
            <summary>
            Delete Rental
            </summary>
            <param name="emailDueño"> Email of the user that is trying to delete the Rental</param>
            <param name="idAlquilerABorraar">Id of the Rentalto delete</param>
            <returns>Returns 200 OK for Success
            400 BadRequest If the email or Id are null - If the user who is deleting the Rental  does not exists in the system - If the Rental does not exists in the system
            500 Server Error</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.AlquilerCabañaController.Get(System.Int32)">
            <summary>
            Get Rental
            </summary>
            <param name="id"> Id of the Rental to get </param>
            <returns>Returns 200 OK with the Rental
            400 BadRequest If the Id is less than zero - 
            404 Not Found If the Rental with that Id does not exists in the System
            500 Server Error</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.AlquilerCabañaController.GetListarAlquileresDeMiCabaña(System.String,System.Int32)">
            <summary>
            Obtain rentals for a cabin that the user owns
            </summary>
            <returns>Returns 200 OK with the Rentals
            400 BadRequest If the email is null or the Id is less than 1- If the cabin does not exists in the system - If the user does not exists in the system -If the user is not the owner of the cabin
            404 Not Found If there is not any Rental for that cabin
            500 Server Error</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:WebAPIObligatorio.Controllers.CabañaController.Get" -->
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.Get(System.Int32)">
            <summary>
            Get a Cabin for Id
            </summary>
            <param name="Id"> Id of the cabin to search </param>
            <returns>Return 400 Bad Request: If the number Id is less than zero
            404 Not Found if there isn't any Cabin with that Id in the system
            Returns 500 for errors in the server or database
            200 OK for success </returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.Post(DTOS.CabañaDTO)">
            <summary>
            Create Cabin
            </summary>
            <param name="cabañadto"> Object Cabin to create in json format</param>
            <returns>Returns 400 Bad Request: If There is already a cabin with that name in the system- If the json object is not valid or the object to be created does not comply with the business rules (example: invalid Type Of Cabin)
             Returns 500 for errors in the server or database 
            200 OK for success</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.Put(DTOS.CabañaDTO,System.String)">
            <summary>
            Update Cabin
            </summary>
            <param name="cabañadto">Cabin object to create in json format </param>
            <param name="email">Email of the user who is updating the cabin  </param>
            <returns>Returns 400 Bad Request: If the object to be updated does not comply with the business rules (example: invalid Type Of Cabin) or the email is null or the user with that email is not the owner of the cabin
             Returns 500 for errors in the server or database 
             Returns 200 OK for success</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.Delete(System.String,System.Int32)">
            <summary>
            Delete Cabin
            </summary>
            <param name="emailDueño">Email of the user who is deleting the cabin </param>
            <param name="idCabañaABorraar"> Id of the cabin to delete </param>
            <returns>Returns 400 Bad Request: If the email or the Id are null - If the cabin with that id does not exists - If the user with that email does not exists - If the user does not have the necessary permissions to delete the cabin
             Returns 500 for errors in the server or database 
            Returns 200 OK for success</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.GETBuscarPorTextoNombre(System.String)">
            <summary>
            Get Cabins by text in name
            </summary>
            <param name="texto"> Text to search in the name of the cabins </param>
            <returns>Returns 400 Bad Request: If the text is null 
            Returns 404 Not Found: If no cabin has that text in the name
             Returns 500 for errors in the server or database 
            Returns 200 succes with the list of cabins</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.GETBuscarPorCantPersonas(System.Int32)">
            <summary>
            Get Cabins by number of guests
            </summary>
            <param name="numero"> The number of guests to search </param>
            <returns>Returns 400 Bad Request: If the number is equals or less than zero
            Returns 404 Not Found: If is no cabin that has that capacity of guest
             Returns 500 for errors in the server or database 
            Returns 200 succes with the list of cabins</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.GETBuscarPorTipo(System.Int32)">
            <summary>
            Get Cabins by Type Of Cabin
            </summary>
            <param name="idTipo"> The id of the Type Of Cabin </param>
            <returns>Returns 400 Bad Request: If the Id is equals or less than zero
            Returns 404 Not Found: If not exist any cabin of this Type Of Cabin
             Returns 500 for errors in the server or database 
            Returns 200 succes with the list of cabins</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:WebAPIObligatorio.Controllers.CabañaController.GETListarNOHabilitadas" -->
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.GETListarPorMonto(System.Int32)">
            <summary>
            Get Cabins by Daily Price
            </summary>
            <param name="monto"> The Daily Price to search the cabins</param>
            <returns>Returns 400 Bad Request: If The daily price to search is less than zero
            Returns 404 Not Found: if there is no cabin with a daily price equal to or less than the indicated one
             Returns 500 for errors in the server or database 
            Returns 200 succes with the list of cabins</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.GETListarHabilitadasEnRangoFechas(System.DateTime,System.DateTime)">
            <summary>
            Get cabins available to Rentalin a range of dates
            </summary>
            <param name="desde"> Start date</param>
            <param name="hasta"> End date</param>
            <returns>Returns 400 Bad Request: If The Start Date is bigger than the End Date
            Returns 404 Not Found: If not exists any cabin available to Rentalin those dates
             Returns 500 for errors in the server or database 
            Returns 200 succes with the list of cabins</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.HabilitarCabaña(System.String,System.Int32)">
            <summary>
            Enable Cabin
            </summary>
            <param name="email"> Email of the user that is trying to Enable the Cabin</param>
            <param name="idCabaña"> Id of the Cabin</param>
            <returns>Returns 400 Bad Request: If the email is null or the Id is less than zero - If the user with that email is not an administrator
             Returns 500 for errors in the server or database 
            Returns 200 succes with the list of cabins</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.CabañaController.DeshabilitarCabaña(System.String,System.Int32)">
            <summary>
            Disable Cabin
            </summary>
            <param name="email"> Email of the user that is trying to Disable the Cabin</param>
            <param name="idCabaña"> Id of the Cabin</param>
            <returns>Returns 400 Bad Request: If the email is null or the Id is less than zero - If the user with that email is not an administrator
             Returns 500 for errors in the server or database 
            Returns 200 succes with the list of cabins</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.MantenimientoController.Get">
            <summary>
            Get all the Maintenances
            </summary>
            <returns>Returns 404 Not Found: If not exists any Maintenance in the system
            Returns 500 for errors in the server or database 
            Returns 200 OK for success with the list of maintenances</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.MantenimientoController.Get(System.Int32)">
            <summary>
            Get a Maintenance by Id
            </summary>
            <param name="id"> Id of the maintenance to search </param>
            <returns>Returns 400 Bad Request: If the id is equals or less than zero
            404 Not Found if is not any maintenance with that Id
            Returns 500 for errors in the server or database
            Returns 200 OK for success </returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.MantenimientoController.Post(DTOS.MantenimientoDTO,System.String)">
            <summary>
            Create Maintenance
            </summary>
            <param name="mantenimientodto"> Maintenance Object to create in json format </param>
            <returns>Returns 400 Bad Request:if the maintenance to be created is null or the business rules are not met (e.g. cost greater than 0)
            Returns 500 for errors in the server or database
            Returns 200 OK for success </returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.MantenimientoController.GETListarPorCabaña(System.Int32)">
            <summary>
            Gets all maintenance performed for a cabin
            </summary>
            <param name="NumeroHabitacion"> Cabin ID </param>
            <returns>Returns 400 Bad Request: If the id is less than 0
            404 Not Found if there is no maintenance for that cabin
            Returns 500 for errors in the server or database
            Returns 200 OK for success </returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.MantenimientoController.GETListarMantenimientosPorFecha(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Obtains the maintenances carried out on a cabin filtered by date
            </summary>
            <param name="Id"> Id of the cabin </param>
            <param name="fecha1"> Minimum date </param>
            <param name="fecha2"> Maximum date </param>
            <returns>Returns 400 Bad Request: If the id is less than 0 or if the dates are not valid
            404 Not Found if there is no maintenance for that cabin in that date range
            Returns 500 for errors in the server or database
            Returns 200 OK for success </returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.MantenimientoController.GETListarMantenimientosPorValores(System.Double,System.Double)">
            <summary>
            Obtains the maintenances carried out on cabins filtered by the capacity of the cabins
            </summary>
            <param name="value1"> Minimum value</param>
            <param name="value2"> Maximum value </param>
            <returns>Returns 400 Bad Request: If the values entered are not valid
            404 Not Found if there is no maintenance for that range of values
            Returns 500 for errors in the server or database
            Returns 200 OK for success </returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.TipoCabañaController.Get">
            <summary>
            Get all types of cabins
            </summary>
            <returns>Returns 404 Not Found if not exists any Type Of Cabin in the sistem
            500 for server or database errors and 200 OK if everything went well</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.TipoCabañaController.Get(System.Int32)">
            <summary>
            Gets Type of Cabin by Id
            </summary>
            <param name="id"> Id of the Type of Cabin to search </param>
            <returns>Returns 400 Bad Request: If the id is less than zero
            404 Not Found if there is no type of cabin with that id
            Returns 500 for errors in the server or database
            Returns 200 OK succes with the Type of Cabin
            </returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.TipoCabañaController.Post(DTOS.TipoCabañaDTO)">
            <summary>
            Create a Type of Cabin
            </summary>
            <param name="tipoCabañaDto"> Type Of Cabin object to create in json format </param>
            <returns>Returns 404 Bad Request: If the object to be created is null, if the business rules are not met (example: characters minimum descripcion)
            Returns 500 for server or database errors
            Returns 200 Ok for success</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.TipoCabañaController.Put(System.Int32,DTOS.TipoCabañaDTO,System.String)">
            <summary>
            Edit a Type Of Cabin
            </summary>
            <param name="id"> Int type id corresponding to the id of the type of cabin to edit </param>
            <param name="tipoCabañaDto"> Type Of Cabin object to edit in json format </param>
            <param name="email">Email of the user who is trying to update the Type Of Cabin</param>
            <returns>Returns 404 Bad Request: If the Type Of Cabin does not exist in the system - If the user with that email is not an administrator
            Returns 500 for errors in the server or database
            Returns 200 OK for success</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.TipoCabañaController.Delete(System.Int32,System.String)">
            <summary>
            Delete a Type Of Cabin
            </summary>
            <param name="id"> Id of the Cabin to delete </param>
            <param name="email"> Email of the user who is trying to delete the Type Of Cabin</param>
            <returns>Returns 404 Bad Request: If the id is less than 0 - If the Type Of Cabin is being used by a cabin - If the user trying to delete the Type Of Cabin is not an administrator
            Returns 404 Not Found if the Type Of Cabin does not exist,
            Returns 500 server error,
            Returns 204 no content if deleted successfully</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.TipoCabañaController.GETBuscarPoroNombre(System.String)">
            <summary>
            Search for a Type Of Cabin by name
            </summary>
            <param name="nombre"> Name of the Type Of Cabin to search </param>
            <returns>Returns 400 Bad Request: If name is null
            Returns 404 Not Found if there is no Type Of Cabin with that name
            Returns 500 server error
            Returns 201 with Type Of Cabin</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.UsuarioController.Login(DTOS.UsuarioLoginDTO)">
            <summary>
            User Login
            </summary>
            <param name="usu">User object to log in json format </param>
            <returns>Returns 200 OK login successfully
            401 Unauthorized If the passowrd or email are wrong</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.UsuarioController.Registro(DTOS.UsuarioDTO)">
            <summary>
            User Sign In
            </summary>
            <param name="usu"> User object to Sign in in json format</param>
            <returns>Returns 200 OK: Sign In successfully
            Returns 400 BadRequest If the user is null
            Returns 500 Server Error</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.UsuarioController.Listar">
            <summary>
            Ger all Users
            </summary>
            <returns>Returns 200 OK: with the list of Users
            Returns 404 Not Found if is not exists any User in the system
            Returns 500 Server Error</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.UsuarioController.GetUserByEmail(System.String)">
            <summary>
            Get User by email
            </summary>
            <param name="email"> Email of the User to search</param>
            <returns>Returns 200 OK with the user 
            Returns 400 BadRequest If the email is null
            Returns 404 Not Found if is not any user with that email
            Returns 500 Server Error</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.UsuarioController.GetCabinsListedForRentalByOwner(System.String)">
            <summary>
            Get the cabins that the user has listed for Rental
            </summary>
            <param name="email"> Email of the User </param>
            <returns>Returns 200 OK with the list of Cabins 
            Returns 400 BadRequest If the email is null - If the user with that email does not exists in the system
            Returns 404 Not Found if is not any cabin listened to Rentalfor the user
            Returns 500 Server Error</returns>
        </member>
        <member name="M:WebAPIObligatorio.Controllers.UsuarioController.GetListarAlquileresRealizadosPorUsuario(System.String)">
            <summary>
            Get Rentals that the user has made
            </summary>
            <param name="emailUsuario"> Email of the User </param>
            <returns>Returns 200 OK with the list of Rentals
            Returns 400 BadRequest If the email is null
            Returns 404 Not Found if is not any Rental
            Returns 500 Server Error</returns>
        </member>
    </members>
</doc>
